https://leetcode.com/problems/find-all-duplicates-in-an-array/

Solution 1
#Negative Marking
/* For example, if the input array is [1, 3, 3, 2], then for 1,
flip the number at index 1, making the array [1,-3,3,2].
Next, for -3 flip the number at index 3, making the array [1,-3,3,-2].
Finally, when we reach the second 3, we'll notice that nums[3] is already negative,
indicating that 3 has been seen before and hence is the duplicate number. */

class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        
        int n=nums.size();
        vector<int>res(n+1,0);
        vector <int> ans;
        for(int i: nums)
        {
            if(nums[abs(i)-1]<0)
                ans.push_back(abs(i));
            else
            {
            nums[abs(i)-1]*=-1;   
            }
        }
        return ans;
    }
};
Solution 2

class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        
        int n=nums.size();
        vector<int>res(n+1,0);
        vector <int> ans;
        for(int i: nums)
        {
                res[i]++;
        }
        
        for(int i=0;i<res.size();i++)
        {
            if(res[i]==2)
            {
                ans.push_back(i);
            }
            
        }
        return ans;
    }
};